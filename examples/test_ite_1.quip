(quip 1 (steps () ((deft $t1 (= a b))
(deft $t2 (p a))
(deft _tseitin_ite1 (ite cond a b))
(deft $t3 (p _tseitin_ite1))
(deft $t4 (not $t3))
(deft _tseitin_and_0 (and $t1 $t2 $t4))
(deft $t5 (= b _tseitin_ite1))
(deft $t6 (p _tseitin_ite1))
(stepc c0 (cl (- $t1) (- $t5) (+ $t6) (- $t2)) (ccl (cl (- $t1) (- $t5) (+ $t6) (- $t2))))
(stepc c1 (cl (- _tseitin_and_0) (+ $t2)) (nn (bool-c and-e _tseitin_and_0 $t2)))
(stepc c2 (cl (+ _tseitin_and_0)) (assert _tseitin_and_0))
(stepc c3 (cl (+ $t2)) (hres (@ c1) ((r1 (@ c2)))))
(stepc c4 (cl (- _tseitin_and_0) (- $t6)) (nn (bool-c and-e _tseitin_and_0 $t4)))
(stepc c5 (cl (- $t6)) (hres (@ c4) ((r1 (@ c2)))))
(stepc c6 (cl (+ cond) (+ $t5)) (nn (ite-false _tseitin_ite1)))
(deft $t7 (= a _tseitin_ite1))
(stepc c7 (cl (+ $t7) (- cond)) (nn (ite-true _tseitin_ite1)))
(stepc c8 (cl (- $t7) (+ $t6) (- $t2)) (ccl (cl (- $t7) (+ $t6) (- $t2))))
(stepc c9 (cl (- $t7)) (hres (@ c8) ((r1 (@ c5)) (r1 (@ c3)))))
(stepc c10 (cl (- cond)) (hres (@ c7) ((r1 (@ c9)))))
(stepc c11 (cl (+ $t5)) (hres (@ c6) ((r1 (@ c10)))))
(stepc c12 (cl (- _tseitin_and_0) (+ $t1)) (nn (bool-c and-e _tseitin_and_0 $t1)))
(stepc c13 (cl (+ $t1)) (hres (@ c12) ((r1 (@ c2)))))
(stepc c14 (cl) (hres (@ c0) ((r1 (@ c13)) (r1 (@ c11)) (r1 (@ c5)) (r1 (@ c3))))))))